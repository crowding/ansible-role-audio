[Unit]
Description=Sound Service

# We require pulseaudio.socket to be active before starting the daemon, because
# while it is possible to use the service without the socket, it is not clear
# why it would be desirable.
#
# A user installing pulseaudio and doing `systemctl --user start pulseaudio`
# will not get the socket started, which might be confusing and problematic if
# the server is to be restarted later on, as the client autospawn feature
# might kick in. Also, a start of the socket unit will fail, adding to the
# confusion.
#
# After=pulseaudio.socket is not needed, as it is already implicit in the
# socket-service relationship, see systemd.socket(5).
Requires=pulseaudio.socket

[Service]
Description=PulseAudio system server
User=root
Group=audio
# make /var/run/pulse for temp files
RuntimeDirectory=pulse
ExecStart=/usr/bin/pulseaudio --daemonize=no --log-target=journal --system --realtime  --disallow-module-loading
LockPersonality=yes
MemoryDenyWriteExecute=yes
NoNewPrivileges=yes
Restart=on-failure

RestrictRealtime=no
MemoryDenyWriteExecute=no
RestrictNamespaces=no
LockPersonality=no
NoNewPrivileges=no

{%if audio.pulse_daemon_conf['realtime-scheduling'] %}
IOSchedulingClass=realtime
IOSchedulingPriority=1
#CPUSchedulingPolicy=rr
#CPUSchedulingPriority={{audio.pulse_daemon_conf['realtime-priority']}}
#Nice={{audio.pulse_daemon_conf['nice-level']}}

# for control groups v1:
#ControlGroup=cpu:/
#ControlGroupAttribute=cpu.rt_runtime_us 450000
#ControlGroupAttribute=cpu.rt_period_us  500000
# for control groups v2:
#Slice=-.slice
LimitRTPRIO=95
LimitRTTIME=500000
LimitNICE=-19
{% endif %}

# Note that notify will only work if --daemonize=no
Type=notify
UMask=0077

[Install]
WantedBy=default.target
